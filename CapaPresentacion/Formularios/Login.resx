<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA3IAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAH/5J
        REFUeJztneuzVMW5h0/O9+SD59s5VedU5U8AQYWgIXIR1CBqCGAoQAgEBFEJeKE0CEZFgqAJkkQuEdQA
        XsBwU2MkAoUUqBAB2WoUVEAhhLtChNhnno69s2b2rD1rZtbMuvTvrXoqkT2z97p0//p93367+z/+QyaT
        yWQymUwmk8lkMpksYB06dPh2gVsKPFtgd4GTBYwQIlFOdvhXf6RfTijwf3F3/P8sMKnAmRTcrBCifU4V
        GFPgG3F0/gsKrE3BTQkhqoN+e0E9nb9zgY9ScCNCiNqg/3aupfP/V4GdKbgBIUR9vF3gW9UKwNQUXLgQ
        Ih6mVtP5v1ngeAouWggRD8c6RPUCCh8cloILFkLEy7CoArAmBRcrhIiXFVEFYF8KLlYIES8tUQXgbAou
        VggRL8ejCkDSFyqEaAASACE8RgIghMdIAITwGAmAEB4jARDCYyQAQniMBEAIj5EACOExEgAhPEYCIITH
        SACE8BgJgBAeIwEQwmMkAEJ4jARACI+RAAjhMRIAITxGAiCEx0gAhPAYCUCG6NSpk/ne975nevToYbp3
        727/O+lrqoXvfOc79j6yev15QgKQIS688ELTpUsX24H4X/476WuqhYsuuijT158nJABCeIwEQAiPkQAI
        4TESAA/o2LGjTbh17drV5g/qgd+h2D0/SAA8oHPnzjbrPnToUDNy5EgzfPjwmuC7Q4YMsQm8pO9JxIME
        IAdcfPHF5vvf/76ZPHmy+c1vftOGxx9/3CxZssSsWrXKrFu3zqxZs6Ym+O4f/vAHs3DhwrJ/p5SHH37Y
        TJkyxQwaNMhOWyb9nERbJAAZATeejt6rVy/Tr18/84Mf/KAVRuXp06ebzZs3mzTZ0aNHzfbt281jjz1m
        xo8fX3TN11xzjfnud79rpwSTfrY+IwHICLjxV199tZk7d67ZsGGD+eCDD1rZu3evOXjwoDl9+nTSfb7I
        zp8/bz7//HNz+PBh8/HHHxdd85YtW8ydd95prrrqqsSfrc9IAFLIpZdeasaNG2cefPDBIjd+2bJlZteu
        XebYsWNJ9+267dSpU2bjxo1m6dKlrfc4bdo0m2sg0Zj0O/AFCUBKwL13rv1PfvITG3Pv378/6X7aVGtp
        abG5ihEjRtjnwPO45JJLbPiT9PvJKxKAlEBjf+2116x7/NFHH5kTJ06Yf/zjH0n3yabamTNnzN///nez
        b98++xx4HggB4U/S7yevSAASgrl0EnrOzV++fLlNmsn+bTyP5557zoY/Lkz48Y9/nPi7yxMSgITo2bOn
        nbbzzc2v137961+rEClGJAAJMWPGDNv5fXPz6zW8AfICEoF4kAAkBO6srHr77W9/a3MCSgzGgwSgQQSz
        +v3797ebeDByuZ8T+zM3Lg+gOps3b17i7zZPSAAaRDCr/8Ybb5iZM2eaAQMGtP788ssvN7feeqv55JNP
        ku5TmTIJQLxIAGKE0laq2+bMmVOU1aca7q233rJ18e6zZLOV+a/eJADxIgGICVx8qve2bdtm5/DLGRls
        93nlAGozKgdZ+ESIlfQ7zwMSgJhwMT2jPTXw5UwCUL/hMa1fv96ui0j6necBCUCdMPLT+YnzyxkLdV58
        8UWzaNEi6/ZX+ryssv31r3811113XeLvPg9IAGogmOG/7bbbyibyyO7jEfz+9783o0ePtrvp8F2+Q2JQ
        VrtRKn3zzTfbTU6SbgtZRwJQA8EMP52/3FQenf+WW24xffr0sZ3fFa5IAOq3s2fPWi+A1YNJt4WsIwGo
        kvay9yxkYckusf4DDzxgp/qiflcW3b766itz7tw5uzdC0u0h60gAIuLcfjpw0Jyrz4hEcooMddjvUOIv
        XtOMQP1IACLi3P7S0du5+tdff33FxigBiNc0I1A/EoB2YCttNrMk4RR03Su5+qUo8984e//99821116b
        eFvJKhKAdujWrZvdneell15qbXB0/kqufilK/DXO2Dxk7Nixtgoz6faSRSQA7cDOtey0G6zsY+SvNu6U
        ADTO2Ah169at5o477ki8vWQRCUAIwYw9rjvuPlS7I40y/401qi4RaM4gSLrNZBEJQAjE9mT2gf9f6+9R
        4q85phmB2pAAhEBij8w+VErytYcEoDmmGYHakAA0CGX+m2+aEageCUCDUOKv+cbCqxtvvLF13YWojASg
        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
</value>
  </data>
</root>